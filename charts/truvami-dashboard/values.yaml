# Default values for truvami-dashboard.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

# Better Auth Configuration
betterAuth:
  # Generate with: openssl rand -base64 32
  # Should be provided via external secret management
  secret: ""

# Application Configuration
app:
  # Public URL for the application (used for OAuth redirects)
  publicUrl: "https://dashboard.truvami.com"

# Keycloak OAuth Configuration
keycloak:
  # Discovery URL for OpenID Connect configuration
  discoveryUrl: "https://sso.sbcdc.ch/auth/realms/truvami/.well-known/openid-configuration"
  # OAuth client ID
  clientId: "dashboard"
  # OAuth client secret - should be provided via external secret
  clientSecret: ""

# Database Configuration
database:
  # PostgreSQL connection string
  # Format: postgresql://username:password@host:port/database
  # Should be provided via external secret
  url: ""

# Truvami API Configuration
api:
  # Public API URL (for external access)
  publicUrl: "https://api.truvami.com"
  # Internal API URL (for container-to-container communication)
  internalUrl: "http://truvami-stack-truvami-api:8888"

# Container Configuration

image:
  repository: ghcr.io/truvami/dashboard
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 3000

ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: dashboard.truvami.com
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: dashboard-tls
  #    hosts:
  #      - dashboard.truvami.com

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Database migration configuration
migration:
  # Resource limits for migration job
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 256Mi

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

hostAliases: []
  # - hostnames:
  #     - foo.local
  #   ip: 1.1.1.1

# PostgreSQL configuration
postgres:
  # Enable to create a PostgreSQL cluster using CloudNativePG
  # When enabled, a PostgreSQL cluster will be automatically created and configured
  enabled: true

  # Number of PostgreSQL replicas
  replicaCount: 1

  # PostgreSQL image configuration
  image:
    repository: ghcr.io/cloudnative-pg/postgresql
    tag: "18"

  # Storage configuration for PostgreSQL
  storage:
    size: 1Gi
    storageClass: ""

  # PostgreSQL configuration parameters
  sharedBuffers: "256MB"

  # Resource limits and requests for PostgreSQL pods
  resources:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 100m
      memory: 256Mi

  # Backup configuration (requires object storage)
  backup:
    enable: false
    retentionPolicy: "30d"
    barmanObjectStore: {}
      # Example configuration for S3-compatible storage:
      # destinationPath: "s3://my-bucket/backups"
      # s3Credentials:
      #   accessKeyId:
      #     name: "postgres-backup-secret"
      #     key: "ACCESS_KEY_ID"
      #   secretAccessKey:
      #     name: "postgres-backup-secret"
      #     key: "SECRET_ACCESS_KEY"
      # wal:
      #   retention: "7d"
      # data:
      #   retention: "30d"

  # External PostgreSQL configuration (used when postgres.enabled is false)
  external:
    # Host of the external PostgreSQL server
    host: ""
    # Port of the external PostgreSQL server
    port: 5432
    # Database name
    database: "dashboard"
    # Username for the database connection
    username: "dashboard"
    # Password for the database connection (will be stored in secret)
    password: ""
    # Optional: existing secret containing database credentials
    # If provided, it should contain keys: DB_HOST, DB_PORT, DB_NAME, DB_USER, DB_PASSWORD
    # When using existingSecret, the above individual values are ignored
    existingSecret: ""
