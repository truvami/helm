apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "truvami-dashboard.fullname" . }}-migrate
  labels:
    {{- include "truvami-dashboard.labels" . | nindent 4 }}
    app.kubernetes.io/component: migration
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
    argocd.argoproj.io/sync-wave: "-1"
spec:
  backoffLimit: 2
  completions: 1
  parallelism: 1
  template:
    metadata:
      name: {{ include "truvami-dashboard.fullname" . }}-migrate
      labels:
        {{- include "truvami-dashboard.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: migration
    spec:
      restartPolicy: Never
      serviceAccountName: {{ include "truvami-dashboard.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: migrate
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: ["migrate"]
          {{- if .Values.postgres.enabled }}
          env:
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-dashboard-db-app
                  key: password
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-dashboard-db-app
                  key: username
            - name: DATABASE_URL
              value: "postgresql://$(DB_USER):$(DB_PASSWORD)@{{ .Release.Name }}-dashboard-db-pooler:5432/app"
          {{- else if .Values.database.existingSecret }}
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.existingSecret }}
                  key: {{ .Values.database.existingSecretKey }}
          {{- else if .Values.database.url }}
          env:
            - name: DATABASE_URL
              value: {{ .Values.database.url | quote }}
          {{- else if .Values.postgres.external.existingSecret }}
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.external.existingSecret }}
                  key: DATABASE_URL
          {{- else }}
          env:
            - name: DATABASE_URL
              value: "postgresql://{{ .Values.postgres.external.username }}:{{ .Values.postgres.external.password }}@{{ .Values.postgres.external.host }}:{{ .Values.postgres.external.port }}/{{ .Values.postgres.external.database }}"
          {{- end }}
          resources:
            {{- toYaml .Values.migration.resources | nindent 12 }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
