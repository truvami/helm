apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "truvami-api.fullname" . }}
  annotations:
    argocd.argoproj.io/sync-wave: "0"
  labels:
    {{- include "truvami-api.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "truvami-api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "truvami-api.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "truvami-api.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          args:
            - '--config'
            - /etc/truvami-api/config.yaml
          command:
            - /usr/bin/truvami-api
          env:
            - name: DATABASE_URI
              valueFrom:
                secretKeyRef:
                  key: {{ .Values.database.secretKey }}
                  name: {{ .Values.database.secretName }}
                  optional: false
            - name: AUTH_APIKEYSECRET
              valueFrom:
                secretKeyRef:
                  key: apikeysecret
                  name: truvami-api
                  optional: false
            - name: ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  key: encryption-key
                  name: truvami-api
                  optional: false
            - name: THINGPARK_ASSECRET
              valueFrom:
                secretKeyRef:
                  key: thingpark-assecret
                  name: truvami-api
                  optional: false
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.api.server.port }}
              protocol: TCP
            - name: grpc
              containerPort: {{ .Values.api.grpc.port }}
              protocol: TCP
            {{- if .Values.api.metrics.enabled }}
            - name: metrics
              containerPort: {{ .Values.api.metrics.port }}
              protocol: TCP
            {{- end }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
