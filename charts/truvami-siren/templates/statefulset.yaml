apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "truvami-siren.fullname" . }}
  labels:
    {{- include "truvami-siren.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "truvami-siren.fullname" . }}
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "truvami-siren.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "truvami-siren.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "truvami-siren.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              {{- include "truvami-siren.selectorLabels" . | nindent 14 }}
      containers:
        - name: {{ .Chart.Name }}
          # Run the wrapper script, forward args to the binary
          command:
            - /bin/bash
            - /etc/truvami-siren/set-env.sh
          args:
            - /usr/bin/truvami-siren
            - --config
            - /etc/truvami-siren/config.yaml
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
            - name: metrics
              containerPort: 9090
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: KAFKA_GROUP_ID
              value: "{{ .Release.Name }}-siren"
            - name: TRUVAMI_ENVIRONMENT
              value: {{ .Values.enviroment | default "production" }}
            - name: KAFKA_SSL_KEYSTORE_LOCATION
              value: /var/run/secrets/kafka/user.p12
            - name: KAFKA_SSL_KEYSTORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: user.password
                  name: "truvami-siren-kafka"
                  optional: false
            - name: KAFKA_SSL_KEY_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: user.password
                  name: "truvami-siren-kafka"
                  optional: false
            - name: VALKEY_URI
              valueFrom:
                secretKeyRef:
                  key: {{ .Values.valkey.secretKey }}
                  name: {{ .Values.valkey.secretName }}
                  optional: false
            # Downward API: pod name for ordinal detection in set-env.sh
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          volumeMounts:
            {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
      volumes:
        {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
